build: off

image: Ubuntu1804

stack: python 3.8

version: '{build}'

skip_commits:
  files:
    - images/*
    - '**/*.md'

environment:
    APPVEYOR_SSH_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEAQCdmNjQe2jt5N57RCQ5tPyvHVIayrMBwNVNT+QU0w axel.voitier@gmail.com
    priv_key:
        secure: YAim9/6Em1w1XRJczSMLcBBMMuv8AMnWVcIKZm7bCDLhqrQzVtkeaet7nxeZmjAK/igPNq+RrjfAtA8aPW+a0M13RKVgHAlrbQV+/JRDsvhEV9L9PE1mfCHBudSOOL6Ud8LVgZ+gCsiJ0F0K4rYfmHo2ZV2VZxRE4vOUa4OGYFILFX5X7mivxIzS7eRuFvdr+xcVoCkl5sGrsVdzWusZPLPuB3u5KkX+CczijBzXQqgGvJoVcVxFrp0VZwMwQJRHEpBbqzted0tJ2FHL5VivpovTz+vHHXIkAzj5IXOQINF/O0rfXAdlA0rskmQwU4o/thwsICpMFUU+gFOWlzTepbz7R4OWC5s5ieFl29DYucEvn/83TzL6+8jRRv61AmRx7KEZZLPSMPQJpj4sPhIy+fuB5TlTPGz3uVqMa5IpJdtC9PmEygdSNZYWeUUVkuvgj3htHRWLtRarW5szvQAiZg==

init:
    - sh: export ARTIFACT_SUFFIX=${APPVEYOR_REPO_TAG_NAME:-git}

install:
    - $APPVEYOR_BUILD_FOLDER/.appveyor/install-sshkey-tools.sh
    - $APPVEYOR_BUILD_FOLDER/.appveyor/tools/install-dependencies.sh
    # Install lxml and canmatrix for conversions
    - sh: pip install lxml canmatrix
    # Block (if you need to test something on the CI machine directly)
    # - export APPVEYOR_SSH_BLOCK=true
    # - curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

test_script:
    # Validate generic EVSE protocol v1
    - ./validate.py Advantics_Generic_EVSE_protocol_v1.kcd
    # Validate generic EVSE protocol v2
    - ./validate.py Advantics_Generic_EVSE_protocol_v2.kcd
    # Validate generic EVSE protocol v3
    - ./validate.py Advantics_Generic_EVSE_protocol_v3.kcd
    # Validate generic PEV protocol v1
    - ./validate.py Advantics_Generic_PEV_protocol_v1.kcd
    # Validate generic PEV protocol v2
    - ./validate.py Advantics_Generic_PEV_protocol_v2.kcd
    # Validate Pymco BMS
    - ./validate.py PYMCO_BMS.kcd
    # Validate CHAdeMO
    - ./validate.py CHAdeMO.kcd
    # Validate buck
    - ./validate.py ADM_PC_BC25.kcd
    # Validate unidirectional PFC / boost converter
    - ./validate.py ADM_PC_UP25.kcd
    # Validate bidirectional PFC (AFE)
    - ./validate.py ADM_PC_BP25.kcd
    # Validate unidirectional LLC
    - ./validate.py ADM_PC_LL25.kcd
    # Validate line filter
    - ./validate.py ADM_PC_LF45.kcd
    # Validate bidirectional converter
    - ./validate.py ADM_PC_BI25.kcd
    # Validate fan control board
    - ./validate.py ADM_CS_FAN1.kcd
    # Validate combiner board
    - ./validate.py ADM_PC_CB01.kcd
    # Validate Sendyne current sensor
    - ./validate.py Sendyne_SFP200.kcd
    # Validate the VCU (vehicle control unit)
    - ./validate.py Advantics_VCU.kcd
    # Validate re-purposed VCU for test-bench applications
    - ./validate.py Advantics_VCU_Testbench.kcd
    # Validate DLOG CAN database
    - ./validate.py Advantics_DLOG.kcd
    # Validate LOGGING CAN database
    - ./validate.py Advantics_LOGGING.kcd
    # Validate SFRA_F CAN database
    - ./validate.py Advantics_SFRA_F.kcd
    # Validate Bootloader CAN database
    - ./validate.py Advantics_Bootloader.kcd
    # Validate PEV AC interface v1
    - ./validate.py AC_v1.kcd

build_script:
    - make -f .appveyor/convert/convert.mk OUTDIR=artifacts

artifacts:
    - path: artifacts
      name: CAN_Databases-r$(ARTIFACT_SUFFIX)

deploy:
    provider: GitHub
    on:
      APPVEYOR_REPO_TAG: true

    release: $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
        secure: KpV2ba2Vl+ssK0TJvqlPGDaFP1xtvMuFFEQQbTLhHDe8t7iTElfBYsKaJ2WkyWFF
    artifact: CAN_Databases-r$(ARTIFACT_SUFFIX).zip
    draft: false
    prerelease: true
    force_update: true
